// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"getProposedAddress","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"getState","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"vote","type":"bool"}],"name":"vote","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"evaluteVotes","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"add","type":"address"}],"name":"initiateProposalContract","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"stage","outputs":[{"name":"","type":"uint8"}],"type":"function"}],
    binary: "60606040526001805460a060020a60ff02191690556127106002556014600355600060048190556305f5e10060075561063190819061003d90396000f3606060405236156100565760e060020a600035046315e86db581146100585780631865c57d1461006b5780634b9f5c981461008157806355b15a67146100a557806373e44b1c146100d7578063c040e6b8146100ec575b005b610100600154600160a060020a03165b90565b61011360015460ff60a060020a90910416610068565b61005660043560018054600091829160ff60a060020a90910416146101c657610002565b600180546100569160009160a060020a900460ff161415806100cd5750600254600454439101115b156103b657610002565b6100566004356007543410156101ad57610002565b61011360015460ff60a060020a9091041681565b600160a060020a03166060908152602090f35b6060908152602090f35b60018054600980543373ffffffffffffffffffffffffffffffffffffffff199182161790915516821774ff0000000000000000000000000000000000000000191660a060020a17905560006005819055600655606060c68061056b833901809050604051809103906000f06008805473ffffffffffffffffffffffffffffffffffffffff19169190911790555b50565b60015460a060020a900460ff1660001461011d57610002565b5080546008547f779d8677000000000000000000000000000000000000000000000000000000006060908152600160a060020a03338116606452928316939190921691829163779d867791608491602091906024908290876161da5a03f11561000257505060405151151590506102a7574360036000505460026000505484600160a060020a0316633b14764a336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750505060405180519060200150010111156102a757610002565b821561030b5781600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750506040515160058054909101905550610365565b81600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600680549091019055505b80600160a060020a031663c06e0ada336040518260e060020a0281526004018082600160a060020a031681526020019150506000604051808303816000876161da5a03f11561000257505050505050565b600654600554111561054a5760015481547f9b96eece00000000000000000000000000000000000000000000000000000000606090815230600160a060020a0381811660645292831694859463beabacc89416928591639b96eece91608491602091906024908290876161da5a03f1156100025750506040805180517fbeabacc80000000000000000000000000000000000000000000000000000000082526004820195909552600160a060020a03909316602484015260448301939093525090516064828101926000929190829003018183876161da5a03f115610002575050600154604080517f7cf4a29a000000000000000000000000000000000000000000000000000000008152600160a060020a0392909216600483015251637cf4a29a91602481810192600092909190829003018183876161da5a03f115610002575050600954600754604051600160a060020a0392909216925060009182818181858883f15050600154604051600160a060020a0391821694503090911631915082818181858883f19350505050506101aa565b6001805474ff0000000000000000000000000000000000000000191690555056606060405260b68060106000396000f3606060405260e060020a60003504633fb410ae8114602e578063779d8677146064578063c06e0ada14607e575b005b73ffffffffffffffffffffffffffffffffffffffff6004351660009081526020819052604090205460ff165b6060908152602090f35b605a60043560006020819052908152604090205460ff1681565b602c60043573ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020805460ff191660011790555056",
    unlinked_binary: "60606040526001805460a060020a60ff02191690556127106002556014600355600060048190556305f5e10060075561063190819061003d90396000f3606060405236156100565760e060020a600035046315e86db581146100585780631865c57d1461006b5780634b9f5c981461008157806355b15a67146100a557806373e44b1c146100d7578063c040e6b8146100ec575b005b610100600154600160a060020a03165b90565b61011360015460ff60a060020a90910416610068565b61005660043560018054600091829160ff60a060020a90910416146101c657610002565b600180546100569160009160a060020a900460ff161415806100cd5750600254600454439101115b156103b657610002565b6100566004356007543410156101ad57610002565b61011360015460ff60a060020a9091041681565b600160a060020a03166060908152602090f35b6060908152602090f35b60018054600980543373ffffffffffffffffffffffffffffffffffffffff199182161790915516821774ff0000000000000000000000000000000000000000191660a060020a17905560006005819055600655606060c68061056b833901809050604051809103906000f06008805473ffffffffffffffffffffffffffffffffffffffff19169190911790555b50565b60015460a060020a900460ff1660001461011d57610002565b5080546008547f779d8677000000000000000000000000000000000000000000000000000000006060908152600160a060020a03338116606452928316939190921691829163779d867791608491602091906024908290876161da5a03f11561000257505060405151151590506102a7574360036000505460026000505484600160a060020a0316633b14764a336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750505060405180519060200150010111156102a757610002565b821561030b5781600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750506040515160058054909101905550610365565b81600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600680549091019055505b80600160a060020a031663c06e0ada336040518260e060020a0281526004018082600160a060020a031681526020019150506000604051808303816000876161da5a03f11561000257505050505050565b600654600554111561054a5760015481547f9b96eece00000000000000000000000000000000000000000000000000000000606090815230600160a060020a0381811660645292831694859463beabacc89416928591639b96eece91608491602091906024908290876161da5a03f1156100025750506040805180517fbeabacc80000000000000000000000000000000000000000000000000000000082526004820195909552600160a060020a03909316602484015260448301939093525090516064828101926000929190829003018183876161da5a03f115610002575050600154604080517f7cf4a29a000000000000000000000000000000000000000000000000000000008152600160a060020a0392909216600483015251637cf4a29a91602481810192600092909190829003018183876161da5a03f115610002575050600954600754604051600160a060020a0392909216925060009182818181858883f15050600154604051600160a060020a0391821694503090911631915082818181858883f19350505050506101aa565b6001805474ff0000000000000000000000000000000000000000191690555056606060405260b68060106000396000f3606060405260e060020a60003504633fb410ae8114602e578063779d8677146064578063c06e0ada14607e575b005b73ffffffffffffffffffffffffffffffffffffffff6004351660009081526020819052604090205460ff165b6060908152602090f35b605a60043560006020819052908152604090205460ff1681565b602c60043573ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020805460ff191660011790555056",
    address: "",
    generated_with: "2.0.6",
    contract_name: "DAOVoting"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("DAOVoting error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("DAOVoting error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("DAOVoting error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("DAOVoting error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.DAOVoting = Contract;
  }

})();
