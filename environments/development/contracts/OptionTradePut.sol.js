// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"loadPrieceForMarginCall","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"loadPrice","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"overdue","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"blocknr","type":"uint256"}],"name":"marginCall","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"blocknr","type":"uint256"}],"name":"useOption","outputs":[],"type":"function"},{"inputs":[{"name":"marketPairadd","type":"address"},{"name":"coladd","type":"address"},{"name":"optionb","type":"address"},{"name":"optiono","type":"address"},{"name":"amount2","type":"uint256"},{"name":"strikeP","type":"uint256"},{"name":"exp","type":"uint256"}],"type":"constructor"}],
    binary: "606060405260405160e08061060f8339610140604052905160805160a05160c0519351610100516101205160008054600160a060020a031990811690971781556001805488169096179095556004805487169094179093556005805490951690951790935560089290925560029290925560035561058d90819061008290396000f3606060405260e060020a6000350463199213ca81146100475780635a1c03ec1461005f57806387f2794414610074578063dedeaae6146100ab578063e6a8201f146100d6575b005b610045670de0b6b3a764000034101561010057610002565b610045600654603c014310156101c857610002565b6100456003546032430111156100a957600554600160a060020a0390811690600090301631606082818181858883f150505050505b565b610045600435600754600090819081908190600160a060020a03908116339091161461025f57610002565b61004560043560045460009081908190819033600160a060020a0390811691161461042057610002565b600654603c0143101561011257610002565b60015460e060020a6393e5e93702606090815243606452600160a060020a0391909116906393e5e937906084906020906024816000876161da5a03f1156100025750604080516000805460e060020a6393e5e9370283524360048401529251600160a060020a03939093169450602482810193602093909290839003909101908290876161da5a03f11561000257505043600655506007805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60015460e060020a6393e5e93702606090815243606452600160a060020a0391909116906393e5e937906084906020906024816000876161da5a03f1156100025750604080516000805460e060020a6393e5e9370283524360048401529251600160a060020a03939093169450602482810193602093909290839003909101908290876161da5a03f1156100025750504360065550565b8460280143101561026f57610002565b600654851461027d57610002565b805460e160020a6336debe290260609081526064879052600160a060020a039190911690636dbd7c529060849060409060248187876161da5a03f11561000257505060405180516020909101519095509350508215156102dc57610002565b6040805160015460e160020a6336debe29028252600482018890528251600160a060020a039190911692636dbd7c529260248181019391829003018187876161da5a03f11561000257505060405180516020919091015190935091505080151561034557610002565b8130600160a060020a03163102606460086000505486605f02600260005054606402030204111561037557610002565b8360026000505411156103cd57600460009054906101000a9004600160a060020a0316600160a060020a031660008360086000505487600260005054030204604051809050600060405180830381858888f150505050505b60405133600160a060020a031690600090670deb5f2f95b780009082818181858883f15050600554604051600160a060020a0391821694503090911631915082818181858883f150505050505050505050565b8460280143101561043057610002565b600654851461043e57610002565b805460e160020a6336debe290260609081526064879052600160a060020a039190911690636dbd7c529060849060409060248187876161da5a03f115610002575050604051805160209091015190955093505082151561049d57610002565b6040805160015460e160020a6336debe29028252600482018890528251600160a060020a039190911692636dbd7c529260248181019391829003018187876161da5a03f11561000257505060405180516020919091015190935091505080151561050657610002565b60026000505484111561051857610002565b600460009054906101000a9004600160a060020a0316600160a060020a031660008360086000505487600260005054030204604051809050600060405180830381858888f15050600554604051600160a060020a0391821694503090911631915082818181858883f15050505050505050505056",
    unlinked_binary: "606060405260405160e08061060f8339610140604052905160805160a05160c0519351610100516101205160008054600160a060020a031990811690971781556001805488169096179095556004805487169094179093556005805490951690951790935560089290925560029290925560035561058d90819061008290396000f3606060405260e060020a6000350463199213ca81146100475780635a1c03ec1461005f57806387f2794414610074578063dedeaae6146100ab578063e6a8201f146100d6575b005b610045670de0b6b3a764000034101561010057610002565b610045600654603c014310156101c857610002565b6100456003546032430111156100a957600554600160a060020a0390811690600090301631606082818181858883f150505050505b565b610045600435600754600090819081908190600160a060020a03908116339091161461025f57610002565b61004560043560045460009081908190819033600160a060020a0390811691161461042057610002565b600654603c0143101561011257610002565b60015460e060020a6393e5e93702606090815243606452600160a060020a0391909116906393e5e937906084906020906024816000876161da5a03f1156100025750604080516000805460e060020a6393e5e9370283524360048401529251600160a060020a03939093169450602482810193602093909290839003909101908290876161da5a03f11561000257505043600655506007805473ffffffffffffffffffffffffffffffffffffffff191633179055565b60015460e060020a6393e5e93702606090815243606452600160a060020a0391909116906393e5e937906084906020906024816000876161da5a03f1156100025750604080516000805460e060020a6393e5e9370283524360048401529251600160a060020a03939093169450602482810193602093909290839003909101908290876161da5a03f1156100025750504360065550565b8460280143101561026f57610002565b600654851461027d57610002565b805460e160020a6336debe290260609081526064879052600160a060020a039190911690636dbd7c529060849060409060248187876161da5a03f11561000257505060405180516020909101519095509350508215156102dc57610002565b6040805160015460e160020a6336debe29028252600482018890528251600160a060020a039190911692636dbd7c529260248181019391829003018187876161da5a03f11561000257505060405180516020919091015190935091505080151561034557610002565b8130600160a060020a03163102606460086000505486605f02600260005054606402030204111561037557610002565b8360026000505411156103cd57600460009054906101000a9004600160a060020a0316600160a060020a031660008360086000505487600260005054030204604051809050600060405180830381858888f150505050505b60405133600160a060020a031690600090670deb5f2f95b780009082818181858883f15050600554604051600160a060020a0391821694503090911631915082818181858883f150505050505050505050565b8460280143101561043057610002565b600654851461043e57610002565b805460e160020a6336debe290260609081526064879052600160a060020a039190911690636dbd7c529060849060409060248187876161da5a03f115610002575050604051805160209091015190955093505082151561049d57610002565b6040805160015460e160020a6336debe29028252600482018890528251600160a060020a039190911692636dbd7c529260248181019391829003018187876161da5a03f11561000257505060405180516020919091015190935091505080151561050657610002565b60026000505484111561051857610002565b600460009054906101000a9004600160a060020a0316600160a060020a031660008360086000505487600260005054030204604051809050600060405180830381858888f15050600554604051600160a060020a0391821694503090911631915082818181858883f15050505050505050505056",
    address: "",
    generated_with: "2.0.6",
    contract_name: "OptionTradePut"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("OptionTradePut error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("OptionTradePut error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("OptionTradePut error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("OptionTradePut error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.OptionTradePut = Contract;
  }

})();
