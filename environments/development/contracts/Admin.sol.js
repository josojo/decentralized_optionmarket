// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"getProposedAddress","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"getState","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"setAdmin","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"vote","type":"bool"}],"name":"vote","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"evaluteVotes","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"getAdmin","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"add","type":"address"}],"name":"initiateProposalContract","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"stage","outputs":[{"name":"","type":"uint8"}],"type":"function"}],
    binary: "60606040526001805460a060020a60ff02199081169091556127106002556014600355600060048190556305f5e100600755600a805490921690915561069990819061004a90396000f36060604052361561006c5760e060020a600035046315e86db5811461006e5780631865c57d146100815780632cae2096146100975780634b9f5c98146100d257806355b15a67146100f65780636e9960c31461012857806373e44b1c1461013c578063c040e6b814610151575b005b610165600154600160a060020a03165b90565b61018260015460ff60a060020a9091041661007e565b61006c600a5460a060020a900460ff1615156100d057600a8054600160a060020a031916331760a060020a60ff02191660a060020a1790555b565b61006c60043560018054600091829160ff60a060020a909104161461021657610002565b6001805461006c9160009160a060020a900460ff1614158061011e5750600254600454439101115b1561041657610002565b610165600a54600160a060020a031661007e565b61006c6004356007543410156101fd57610002565b61018260015460ff60a060020a9091041681565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b6001805460098054600160a060020a0319908116331790915516821760a060020a60ff02191660a060020a1790556000600581905560065560405160c6806105d3833901809050604051809103906000f060088054600160a060020a0319169190911790555b50565b60015460a060020a900460ff1660001461019457610002565b505060008054600854604080517f779d8677000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301529151938216949290911692839263779d8677926024818101936020939092839003909101908290876161da5a03f1156100025750506040515115159050610307574360036000505460026000505484600160a060020a0316633b14764a336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505050604051805190602001500101111561030757610002565b821561036b5781600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600580549091019055506103c5565b81600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600680549091019055505b80600160a060020a031663c06e0ada336040518260e060020a0281526004018082600160a060020a031681526020019150506000604051808303816000876161da5a03f11561000257505050505050565b60065460055411156105c0575060015460008054604080517f9b96eece00000000000000000000000000000000000000000000000000000000815230600160a060020a038181166004840152925193831695869563beabacc895949091169391928692639b96eece926024838101936020939290839003909101908290876161da5a03f1156100025750506040805180517fbeabacc80000000000000000000000000000000000000000000000000000000082526004820195909552600160a060020a0393909316602484015260448301939093525090516064828101926000929190829003018183876161da5a03f115610002575050600154604080517f7cf4a29a000000000000000000000000000000000000000000000000000000008152600160a060020a0392909216600483015251637cf4a29a91602481810192600092909190829003018183876161da5a03f115610002575050600954600754604051600160a060020a0392909216925060009182818181858883f15050600154604051600160a060020a0391821694503090911631915082818181858883f19350505050506101fa565b6001805460a060020a60ff02191690555056606060405260b68060106000396000f3606060405260e060020a60003504633fb410ae8114602e578063779d8677146064578063c06e0ada14607e575b005b73ffffffffffffffffffffffffffffffffffffffff6004351660009081526020819052604090205460ff165b6060908152602090f35b605a60043560006020819052908152604090205460ff1681565b602c60043573ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020805460ff191660011790555056",
    unlinked_binary: "60606040526001805460a060020a60ff02199081169091556127106002556014600355600060048190556305f5e100600755600a805490921690915561069990819061004a90396000f36060604052361561006c5760e060020a600035046315e86db5811461006e5780631865c57d146100815780632cae2096146100975780634b9f5c98146100d257806355b15a67146100f65780636e9960c31461012857806373e44b1c1461013c578063c040e6b814610151575b005b610165600154600160a060020a03165b90565b61018260015460ff60a060020a9091041661007e565b61006c600a5460a060020a900460ff1615156100d057600a8054600160a060020a031916331760a060020a60ff02191660a060020a1790555b565b61006c60043560018054600091829160ff60a060020a909104161461021657610002565b6001805461006c9160009160a060020a900460ff1614158061011e5750600254600454439101115b1561041657610002565b610165600a54600160a060020a031661007e565b61006c6004356007543410156101fd57610002565b61018260015460ff60a060020a9091041681565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b6001805460098054600160a060020a0319908116331790915516821760a060020a60ff02191660a060020a1790556000600581905560065560405160c6806105d3833901809050604051809103906000f060088054600160a060020a0319169190911790555b50565b60015460a060020a900460ff1660001461019457610002565b505060008054600854604080517f779d8677000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301529151938216949290911692839263779d8677926024818101936020939092839003909101908290876161da5a03f1156100025750506040515115159050610307574360036000505460026000505484600160a060020a0316633b14764a336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505050604051805190602001500101111561030757610002565b821561036b5781600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600580549091019055506103c5565b81600160a060020a0316639b96eece336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151600680549091019055505b80600160a060020a031663c06e0ada336040518260e060020a0281526004018082600160a060020a031681526020019150506000604051808303816000876161da5a03f11561000257505050505050565b60065460055411156105c0575060015460008054604080517f9b96eece00000000000000000000000000000000000000000000000000000000815230600160a060020a038181166004840152925193831695869563beabacc895949091169391928692639b96eece926024838101936020939290839003909101908290876161da5a03f1156100025750506040805180517fbeabacc80000000000000000000000000000000000000000000000000000000082526004820195909552600160a060020a0393909316602484015260448301939093525090516064828101926000929190829003018183876161da5a03f115610002575050600154604080517f7cf4a29a000000000000000000000000000000000000000000000000000000008152600160a060020a0392909216600483015251637cf4a29a91602481810192600092909190829003018183876161da5a03f115610002575050600954600754604051600160a060020a0392909216925060009182818181858883f15050600154604051600160a060020a0391821694503090911631915082818181858883f19350505050506101fa565b6001805460a060020a60ff02191690555056606060405260b68060106000396000f3606060405260e060020a60003504633fb410ae8114602e578063779d8677146064578063c06e0ada14607e575b005b73ffffffffffffffffffffffffffffffffffffffff6004351660009081526020819052604090205460ff165b6060908152602090f35b605a60043560006020819052908152604090205460ff1681565b602c60043573ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020805460ff191660011790555056",
    address: "0x1e62e645d89f7f422ad52cfbea12d76b3dc8348c",
    generated_with: "2.0.6",
    contract_name: "Admin"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Admin error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Admin error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Admin error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Admin error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Admin = Contract;
  }

})();
